defaults: &defaults
  docker:
    - image: nerveshub/docker-build:alpine-3.13.1
  working_directory: ~/repo

remote_docker: &remote_docker
  setup_remote_docker:
    version: 20.10.14

version: 2.1
orbs:
  docker: circleci/docker@1.6.0
jobs:
  fetch_deps:
    docker:
      - image: hexpm/elixir:1.15.7-erlang-26.1.2-alpine-3.18.4
        environment:
          MIX_ENV: test
    working_directory: ~/app

    steps:
      - checkout
      - run: apk add build-base git
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run: mix do deps.get
      - save_cache:
          key: mix-deps-v2-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"

  test_elixir:
    docker:
      - image: hexpm/elixir:1.15.4-erlang-26.0.2-alpine-3.18.2
        environment:
          MIX_ENV: test
          HOST: localhost
          DATABASE_URL: postgres://db:db@localhost:5432/db
          SECRET_KEY_BASE: ${SECRET_KEY_BASE:-BGC824f8kh1IQPXK7bUmXDigrw404rA7rivR96vGv4bhMIRogiaFN7Z6R4duZClA}
          LIVE_VIEW_SIGNING_SALT: ${LIVE_VIEW_SIGNING_SALT:-2GiUN2NDLEnYT8I/3Q+XL6LGUGEKGogh}
      - image: cimg/postgres:12.12
        environment:
          POSTGRES_USER: db
          POSTGRES_DB: db
          POSTGRES_PASSWORD: db
    working_directory: ~/app
    steps:
      - checkout
      - run: apk add build-base git fwup curl sudo
      - docker/install-dockerize
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - restore_cache:
          keys:
            - mix-deps-v2-{{ .Branch }}-{{ checksum "mix.lock" }}
      - run: mix compile
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Test
          command: mix test
      - run:
          name: Verify formatting
          command: mix format --check-formatted
      - run:
          name: Copy test certs into place for release config
          command: |
            cp test/fixtures/ssl/user-root-ca.pem /etc/ssl/
            cp test/fixtures/ssl/root-ca.pem /etc/ssl/
      # - run:
      #     name: Test API release.exs
      #     command: mix eval 'Config.Reader.read!("apps/nerves_hub_api/config/release.exs")'
      #     environment:
      #       AWS_REGION: region
      #       CA_HOST: localhost
      #       HOST: localhost
      #       S3_BUCKET_NAME: bucket
      #       S3_LOG_BUCKET_NAME: bucket-log
      #       SES_PORT: 2525
      #       SES_SERVER: server
      #       SMTP_PASSWORD: password
      #       SMTP_USERNAME: username
      # - run:
      #     name: Test Device release.exs
      #     command: mix eval 'Config.Reader.read!("apps/nerves_hub_device/config/release.exs")'
      #     environment:
      #       AWS_REGION: region
      #       HOST: localhost
      #       S3_BUCKET_NAME: bucket
      #       S3_LOG_BUCKET_NAME: bucket-log
      #       SES_PORT: 2525
      #       SES_SERVER: server
      #       SMTP_PASSWORD: password
      #       SMTP_USERNAME: username
      # - run:
      #     name: Test WWW release.exs
      #     command: mix eval 'Config.Reader.read!("apps/nerves_hub_www/config/release.exs")'
      #     environment:
      #       AWS_REGION: region
      #       HOST: localhost
      #       LIVE_VIEW_SIGNING_SALT: signing-salt
      #       S3_BUCKET_NAME: bucket
      #       S3_LOG_BUCKET_NAME: bucket-log
      #       SECRET_KEY_BASE: secret-key-base
      #       SES_PORT: 2525
      #       SES_SERVER: server
      #       SMTP_PASSWORD: password
      #       SMTP_USERNAME: username

  # test_javascript:
  #   docker:
  #     - image: circleci/node:14.4.0
  #   working_directory: ~/app/apps/nerves_hub_www/assets
  #   steps:
  #     - checkout:
  #         path: ~/app
  #     - restore_cache:
  #         keys:
  #           - mix-deps-v2-{{ .Branch }}-{{ checksum "../../../mix.lock" }}
  #     - run: npm install
  #     - run:
  #         name: Verify formatting
  #         command: npm run check_formatting
  #     - run:
  #         name: ESLint
  #         command: npm run lint
  #     - run:
  #         name: Test
  #         command: npm run test

  build-docker:
    <<: *defaults
    steps:
      - checkout
      - <<: *remote_docker
      - run:
          name: Set docker env
          command: |
            if [ -z "$CIRCLE_TAG" ]; then
            BRANCH=$(git rev-parse --abbrev-ref HEAD)
              SHA=$(git rev-parse --short HEAD)
              TAG=$(echo "v.$BRANCH.$SHA" | sed 's/\//_/g')
            else
              TAG=$CIRCLE_TAG
            fi
            echo "export DOCKER_TAG=$TAG" >> $BASH_ENV
      - run:
          name: build docker image
          command: |
            docker build \
              -t nerveshub/nerves_hub:$DOCKER_TAG \
              -t nerveshub/nerves_hub:latest .
      - run:
          name: Save docker images
          command: |
            mkdir -p /docker
            docker save \
              nerveshub/nerves_hub:$DOCKER_TAG \
              -o /docker/nerves_hub-$DOCKER_TAG.tar
            docker save \
              nerveshub/nerves_hub:latest \
              -o /docker/nerves_hub-latest.tar
      - save_cache:
          key: docker-{{ .Branch }}-{{ .Revision }}
          paths: "/docker"

  automerge:
    docker:
        - image: alpine:3.18.4
    steps:
      - run:
          name: Install GitHub CLI
          command: apk add --no-cache build-base github-cli
      - run:
          name: Attempt PR automerge
          command: |
            author=$(gh pr view "${CIRCLE_PULL_REQUEST}" --json author --jq '.author.login' || true)

            if [ "$author" = "app/dependabot" ]; then
              gh pr merge "${CIRCLE_PULL_REQUEST}" --auto --rebase || echo "Failed trying to set automerge"
            else
              echo "Not a dependabot PR, skipping automerge"
            fi

workflows:
  version: 2
  pipeline:
      jobs:
        - fetch_deps
        - test_elixir:
            requires:
              - fetch_deps
        # - test_javascript:
        #     requires:
        #       - fetch_deps
        - build-docker:
            requires:
              - test_elixir
        - automerge:
            requires: 
              - build-docker
            context: org-global
            filters:
              branches:
                only: /^dependabot.*/
