<div :if={@device.deleted_at} class="alert alert-danger mt-0">
  <div class="content-container">
    <center>Device is deleted and must be restored to use</center>
  </div>
</div>

<div class="action-row mb-1">
  <.link navigate={~p"/org/#{@org.name}/#{@product.name}/devices"} class="back-link">
    All Devices
  </.link>
  <div class="btn-group" role="group" aria-label="Device Actions">
    <%= if @device.deleted_at do %>
      <button class="btn btn-outline-light btn-action" aria-label="Restore" type="button" phx-click="restore">
        <span class="button-icon power"></span>
        <span class="action-text">Restore</span>
      </button>
      <button class="btn btn-outline-light btn-action btn-primary" aria-label="Destroy" type="button" phx-click="destroy" data-confirm="Are you sure?">
        <span class="button-icon delete"></span>
        <span class="action-text">Destroy</span>
      </button>
    <% else %>
      <button class={["btn btn-outline-light btn-action", disconnected?(@device_connection) && "disabled"]} aria-label="Reboot device" type="button" phx-click="reboot" data-confirm="Are you sure?">
        <span class="button-icon power"></span>
        <span class="action-text">Reboot</span>
      </button>
      <button class={["btn btn-outline-light btn-action", disconnected?(@device_connection) && "disabled"]} aria-label="Reconnect device" type="button" phx-click="reconnect">
        <span class="button-icon reconnect"></span>
        <span class="action-text">Reconnect</span>
      </button>
      <button class={["btn btn-outline-light btn-action", disconnected?(@device_connection) && "disabled"]} aria-label="Identify device" type="button" phx-click="identify">
        <span class="button-icon identify"></span>
        <span class="action-text">Identify</span>
      </button>
      <%= link(class: "btn btn-outline-light btn-action #{unless (@console_active?), do: "disabled"}", aria_label: "Console", target: "_blank", to: Routes.device_path(@socket, :console, @org.name, @product.name, @device.identifier)) do %>
        <span class="button-icon console-icon"></span>
        <span class="action-text">Console</span>
      <% end %>
      <button class="btn btn-outline-light btn-action" aria-label={if @device.updates_enabled, do: "Disable Updates", else: "Enable Updates"} type="button" phx-click="toggle_health_state">
        <span class="button-icon firmware-disabled"></span>
        <span class="action-text">{if @device.updates_enabled, do: "Disable Updates", else: "Enable Updates"}</span>
      </button>
      <button class="btn btn-outline-light btn-action" aria-label="Delete" type="button" phx-click="delete" data-confirm="Are you sure?">
        <span class="button-icon delete"></span>
        <span class="action-text">Delete</span>
      </button>
      <.link navigate={~p"/org/#{@org.name}/#{@product.name}/devices/#{@device.identifier}/settings"} class="btn btn-outline-light btn-action" aria-label="Edit">
        <span class="button-icon edit"></span>
        <span class="action-text">Settings</span>
      </.link>
    <% end %>
  </div>
</div>

<DeviceHeader.render org={@org} product={@product} device={@device} device_connection={@device_connection} />

<FwupProgress.render :if={assigns.fwup_progress} fwup_progress={@fwup_progress} />

<div class="divider mt-3 mb-4"></div>

<div class="row">
  <div class="col-lg-6">
    <div>
      <h3 class="mb-2">Information</h3>
      <!-- Show if device has overriden any product-level extensions by disabling them -->
      <div :if={@extension_overrides != []} class="display-box">
        <div class="help-text mb-1">Extensions</div>
        Device has disabled extensions: {Enum.join(@extension_overrides, ", ")}
      </div>

      <div class="display-box">
        <div class="help-text mb-1">Tags</div>
        <p :if={is_nil(@device.tags)}>No Tags</p>
        <span :for={tag <- @device.tags || []} class="badge">{tag}</span>
      </div>

      <DeviceLocation.render :if={@product.extensions.geo and @device.extensions.geo} location={@device.connection_metadata["location"]} />

      <%= if !Enum.empty?(@metadata) do %>
        <h3 class="mb-2">Metadata</h3>
        <div class="display-box metrics">
          <div :for={{key, value} <- @metadata} class="display-box-item">
            <div :if={value != ""} class="help-text">{key |> String.replace("_", " ") |> String.capitalize()}</div>
            <p>{value}</p>
          </div>
        </div>
      <% end %>
    </div>

    <div>
      <h3 class="mb-2">First Connect Code</h3>
      <%= if code = connecting_code(@device) do %>
        <pre class="hljs"><code class="hljs elixir" phx-hook="HighlightCode" id={"connecting-code-#{@device.id}"}><%= code %></code></pre>
      <% else %>
        <div class="display-box">
          No code sent
        </div>
      <% end %>
    </div>

    <div :if={@scripts != []}>
      <h3 class="mb-2">Support Scripts</h3>

      <div class="display-box">
        <div :for={{script, idx} <- @scripts} class="mb-2 pb-2 border-bottom border-dark">
          <div class="flex-row align-items-center justify-content-between">
            <div>{script.name}</div>
            <button class="btn btn-secondary" disabled={script.output == running_script_placeholder()} phx-click={if script.output, do: "clear-script-output", else: "run-script"} phx-value-idx={idx}>
              {script_button_text(script.output)}
            </button>
          </div>
          <div :if={script.output} class="mt-2">
            <code class="alarms-description color-white wb-ba ff-m">{script.output}</code>
          </div>
        </div>
        <div class="text-right">
          <.link navigate={~p"/org/#{@org.name}/#{@product.name}/scripts"}>
            Add and edit scripts
          </.link>
        </div>
      </div>
    </div>
  </div>

  <div class="col-lg-6">
    <div :if={@product.extensions.health and @device.extensions.health} class="device-health-section">
      <div class="device-header-group justify-content-between">
        <h3 class="mb-2">Health</h3>

        <button
          class="btn btn-outline-light btn-action"
          aria-label={if @health_check_timer, do: "Disable Auto Refresh", else: "Enable Auto Refresh"}
          type="button"
          phx-click="toggle-health-check-auto-refresh"
        >
          <span :if={@health_check_timer} class="action-text">Disable Auto Refresh</span>
          <span :if={!@health_check_timer} class="action-text">Enable Auto Refresh</span>
        </button>
      </div>

      <%= if (Enum.empty?(@latest_metrics) and is_nil(@alarms) )do %>
        <div class="display-box">
          No health information has been received for this device.
        </div>
      <% end %>
      <div>
        <div class="device-health current-alarms">
          <div class="callout">
            <%= if @alarms do %>
              <div class="help-text label">Active Alarms</div>
              <div :for={{{alarm, description}, index} <- Enum.with_index(@alarms)}>
                <div>
                  <span phx-click={JS.toggle_class("hidden", to: "#alarm-#{index}")} class={"badge #{if has_description?(description), do: "alarm-clickable"}"}>{alarm}</span>
                </div>
                <code :if={has_description?(description)} id={"alarm-#{index}"} class="hidden alarms-description color-white wb-ba ff-m">{description}</code>
              </div>
            <% else %>
              <div class="help-text label">No active alarms</div>
            <% end %>
          </div>
        </div>
        <%= if (Enum.any?(Map.values(@latest_metrics))) do %>
          <div class="device-health">
            <%!-- Display CPU load averages as a group. --%>
            <div :if={@latest_metrics["load_1min"]} class="callout">
              <div class="help-text label">Load avg</div>
              {@latest_metrics["load_1min"]} | {@latest_metrics["load_5min"]} | {@latest_metrics["load_15min"]}
            </div>
            <%!--Show CPU and memory usage if reported. Higher values will be displayed in warningly colors. --%>
            <%= if @latest_metrics["cpu_usage_percent"] do %>
              <div class={"callout #{Utils.usage_percent_to_status(@latest_metrics["cpu_usage_percent"])}"}>
                <div class="help-text label">CPU use</div>
                {round(@latest_metrics["cpu_usage_percent"])}%
              </div>
            <% end %>
            <%= if @latest_metrics["cpu_temp"] do %>
              <div class={"callout #{Utils.cpu_temp_to_status(@latest_metrics["cpu_temp"])}"}>
                <div class="help-text label">CPU temp</div>
                {round(@latest_metrics["cpu_temp"])}Â°
              </div>
            <% end %>
            <%= if @latest_metrics["mem_used_mb"] do %>
              <div class={"callout #{Utils.usage_percent_to_status(@latest_metrics["mem_used_percent"])}"}>
                <div class="help-text label">Memory used</div>
                {round(@latest_metrics["mem_used_mb"])}MB ({round(@latest_metrics["mem_used_percent"])}%)
              </div>
            <% end %>
            <%= if @latest_metrics["disk_available_kb"] do %>
              <div class={"callout #{Utils.usage_percent_to_status(@latest_metrics["disk_used_percentage"])}"}>
                <div class="help-text label">Disk used</div>
                {Utils.disk_usage(@latest_metrics)}
              </div>
            <% end %>
            <%!--Display custom metrics, if any. Filters out "timestamp" key.--%>
            <%= for {key, val} <- @latest_metrics do %>
              <div :if={key not in Metrics.default_metrics() and key != "timestamp"} class="callout">
                <div class="help-text label">{format_key(key)}</div>
                {val}
              </div>
            <% end %>
          </div>

          <div class="flex-row justify-content-between">
            <div class="last-report">
              <span class="label pr-1">Last reported :</span>
              <time id="health-reported-at" phx-hook="UpdatingTimeAgo" datetime={String.replace(DateTime.to_string(DateTime.truncate(@latest_metrics["timestamp"], :second)), " ", "T")}>
                {Timex.from_now(@latest_metrics["timestamp"])}
              </time>
            </div>
            <div>
              <.link navigate={~p"/org/#{@org.name}/#{@product.name}/devices/#{@device.identifier}/health"}>
                Full metrics
              </.link>
            </div>
          </div>
        <% end %>
      </div>
    </div>

    <div>
      <h3 class="mb-2">Deployments</h3>
      <div class="display-box">
        <div :if={@device.deployment_id}>
          <div class="help-text mb-1">
            Assigned Deployment
          </div>
          <div :if={@deployment} class="d-flex flex-row">
            <div class="mr-1">
              <.link navigate={~p"/org/#{@org.name}/#{@product.name}/deployments/#{@deployment.name}"} class="badge">
                <div class={"deployment-state state-#{if @deployment.is_active, do: "on", else: "off"}"}>{@deployment.name}</div>
              </.link>
            </div>
            <div>
              <button
                class="btn btn-sm btn-primary btn-action help-text tooltip-label help-tooltip mt-1 mb-1 pt-1 pb-1"
                phx-click="remove-from-deployment"
                data-confirm="Are you sure you want to remove this device from its deployment?"
              >
                <span class="button-icon delete"></span>
                <span class="tooltip-text ml-1">Remove this device from the assigned Deployment.</span>
              </button>
            </div>
          </div>
          <span :if={is_nil(@deployment)} class="color-white-50">No Assigned Deployment</span>
        </div>

        <div :if={Enum.empty?(@eligible_deployments) && is_nil(@device.deployment_id)}>
          No Eligible Deployments
        </div>

        <div :if={Enum.any?(@eligible_deployments) && is_nil(@device.deployment_id)}>
          <div class="help-text mb-1">
            Eligible Deployments
          </div>
          <form phx-submit="set-deployment">
            <div class="flex-row justify-content-between">
              <select name="deployment_id" class="form-control">
                <option value="">Select a deployment</option>
                <%= for deployment <- @eligible_deployments do %>
                  <option value={deployment.id}>{deployment.name}</option>
                <% end %>
              </select>
              <button class="btn btn-secondary ml-2">Set</button>
            </div>
          </form>
        </div>

        <div :if={@update_information.update_available && @device.deployment_id} class="mt-4">
          <div class="help-text mb-1 tooltip-label help-tooltip">
            <span>Update available</span>
            <span class="tooltip-info"></span>
            <span class="tooltip-text">An update is available in the assigned deployment. You can skip the queue by clicking "Send available update".</span>
          </div>
          <form id="available_update_form" phx-submit="push-available-update">
            <div class="flex-row justify-content-between">
              <button class="btn btn-secondary">Send available update</button>
            </div>
          </form>
        </div>

        <div class="mt-4">
          <div class="help-text mb-1 tooltip-label help-tooltip">
            <span>Send update</span>
            <span class="tooltip-info"></span>
            <span class="tooltip-text">Push a specific version of firmware to a device. This disables updates to prevent a deployment pushing an update on reconnect.</span>
          </div>
          <form :if={Enum.any?(@firmwares)} phx-submit="push-update">
            <div class="flex-row justify-content-between">
              <select name="uuid" class="form-control">
                <option value="">Select a version</option>
                <%= for firmware <- @firmwares do %>
                  <option value={firmware.uuid}>{firmware.version}</option>
                <% end %>
              </select>
              <button class="btn btn-secondary ml-2">Send</button>
            </div>
          </form>
          <div :if={Enum.empty?(@firmwares)} class="color-white-50">
            No firmware is available for this device.
          </div>
        </div>
      </div>
    </div>

    <div>
      <div class="device-header-group justify-content-between">
        <h3 class="mb-2">Latest Activity</h3>

        <a
          class="btn btn-outline-light btn-action"
          title="Download Audit Logs"
          aria-label="Download Audit Logs"
          href={Routes.device_path(@socket, :export_audit_logs, @org.name, @product.name, @device.identifier)}
        >
          <div class="button-icon download"></div>
        </a>
      </div>

      <AuditLogFeed.render audit_logs={@audit_logs} audit_pager={@audit_pager} />
    </div>
  </div>
</div>
